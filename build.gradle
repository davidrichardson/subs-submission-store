buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "org.asciidoctor.convert" version "1.5.3"
	id 'com.sourcemuse.mongo' version '1.0.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'dmr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/release" }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-amqp')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('com.jayway.jsonpath:json-path:2.3.0')
	compile('com.fasterxml.jackson.module:jackson-module-afterburner:2.9.4')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.4')
	compile('uk.ac.ebi.tsc.aap.client:security:1.0.1-SNAPSHOT')

	compileOnly('org.projectlombok:lombok')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.springframework.security:spring-security-test')

	testCompile('com.google.guava:guava:24.0-jre')
}


ext {
	snippetsDir = file('build/generated-snippets')
}

task(testsMakesDocs, type: Test) {
	outputs.dir snippetsDir
	useJUnit {
		includeCategories 'uk.ac.ebi.submission.DocumentationProducer'
	}
	testLogging {
		exceptionFormat = 'full'
	}
}

configure(testsMakesDocs) {
	group = "documentation"
	description = 'Run tests that generate documentation snippets'
}

asciidoctor {
	inputs.dir snippetsDir
	attributes (
			'snippets': snippetsDir,
			'toc-title': 'Contents',
			'toclevels': 1,
			'doctype': 'book',
			'icons': 'font',
			'source-highlighter': 'highlightjs',
			'stylesheet': 'colony.css',
			'stylesdir': 'stylesheets',
			'linkcss': '',
			'sectlinks': '',
			'sectanchors': ''
	)
	backends 'html5'

	resources {
		from(sourceDir) {
			include 'stylesheets/**/*.css'
		}
	}

	dependsOn testsMakesDocs
}

tasks.withType(Test){
	runWithMongoDb = true
	mongo {
		mongoVersion '3.4.3'
	}
}

jar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}